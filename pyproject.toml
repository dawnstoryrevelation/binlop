# This pyproject.toml uses PEP 621 metadata and setuptools as the build backend.
# It declares optional dependencies for both PyTorch and TensorFlow so that
# end users can choose to install the framework they need. The base package
# itself has no hard dependency on either library, which helps avoid
# environment conflicts when installing on systems where only one of the
# frameworks is present.

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "binlop"
version = "0.1.0"
description = "BiNLOP: Bipolar Nonlinear Operator activation function for deep learning"
readme = "README.md"
authors = [ { name = "Jasper Jiang", email = "jasperjiang@dawntasy.com" } ]
license = { text = "MIT" }
requires-python = ">=3.8"
keywords = ["activation", "deep learning", "machine learning", "binlop", "neural networks"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Core dependencies are empty because the activation code is pure python
# and will lazily import torch or tensorflow only when those modules
# are available. Users can install extras to pull in the appropriate
# frameworks.
dependencies = []

[project.optional-dependencies]
torch = ["torch>=1.10"]
tensorflow = ["tensorflow>=2.10"]

[project.urls]
"Homepage" = "https://github.com/binlop/binlop"
"Source" = "https://github.com/binlop/binlop"
